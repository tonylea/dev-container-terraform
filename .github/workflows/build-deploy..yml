name: Deploy Images to GHCR

env:
  ARTIFACT_NAME: "image"
  IMAGE_NAME: "devcontainer-terraform"

on:
  push:
  pull_request:
    types: [closed]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and export
        uses: docker/build-push-action@v4
        with:
          push: false
          context: ./src
          tags: tonylea/${{env.IMAGE_NAME}}:latest
          outputs: type=docker,dest=/tmp/${{env.IMAGE_NAME}}.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        # if: github.event.pull_request.merged == true
        with:
          name: ${{env.ARTIFACT_NAME}}}
          path: /tmp/${{env.IMAGE_NAME}}.tar

  deploy:
    # this job will only run if the PR has been merged
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{env.ARTIFACT_NAME}}}
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/${{env.IMAGE_NAME}}.tar

  #   defaults:
  #     run:
  #       working-directory: "./src"
  #   steps:
  #     - name: "Checkout GitHub Action"
  #       uses: actions/checkout@main

  #     - name: "Login to GitHub Container Registry"
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{github.actor}}
  #         password: ${{secrets.GITHUB_TOKEN}}

  #     - name: "Build Inventory Image"
  #       run: |
  #         docker push tonylea/${{env.IMAGE_NAME}}:latest

  #     - uses: actions/checkout@v2
  #     - name: Configure committer
  #       run: |
  #         git config user.name "GitHub Actions Bot"
  #         git config user.email "gitbot@fakeemail.com"

  #     - name: "Update version"
  #       run: |
  #         npm install -g standard-version
  #         standard-version
  #         git push --follow-tags origin HEAD:main

  #     - name: Build the Docker image
  #       run: |
  #         docker tag tonylea/${{env.IMAGE_NAME}}:latest tonylea/${{env.IMAGE_NAME}}::${{github.ref_name}}
  #         docker push tonylea/${{env.IMAGE_NAME}}:${{github.ref_name}}
